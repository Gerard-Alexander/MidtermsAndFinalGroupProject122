package rav;
/**
 * This method converts a binary number to its octal representation.
 *
 * @param binary Binary number to convert to octal
 * @return The octal equivalent of the binary number
 * @author Ravone Ebeng
 */
public static String binaryToOctal(String binary) {
    String[] parts = binary.split("\\."); // Split the binary number into whole and fractional parts

    // Convert the whole number part to octal
    int wholeNumber = Integer.parseInt(parts[0], 2); // Convert whole number from binary to decimal
    String wholeNumberOctal = Integer.toOctalString(wholeNumber); // Convert whole number from decimal to octal

    // Convert the fractional part to octal
    StringBuilder fractionalPartOctal = new StringBuilder();
    if (parts.length > 1) {
        String fractionPartBinary = parts[1];
        while (fractionPartBinary.length() % 3 != 0) { // Pad with zeros to make length a multiple of 3
            fractionPartBinary += "0";
        }
        for (int i = 0; i < fractionPartBinary.length(); i += 3) {
            String threeBits = fractionPartBinary.substring(i, i + 3);
            int decimal = Integer.parseInt(threeBits, 2); // Convert three bits from binary to decimal
            fractionalPartOctal.append(Integer.toOctalString(decimal)); // Convert decimal to octal
        }
    }

    return wholeNumberOctal + (fractionalPartOctal.length() > 0 ? "." + fractionalPartOctal : "");
}
