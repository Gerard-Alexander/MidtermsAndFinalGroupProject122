package rav;

/**
 * This method converts an octal number to its binary representation.
 *
 * @param octal Octal number to convert to binary
 * @return The binary equivalent of the octal number
 * @author Ravone Ebeng
 */
public static String octalToBinary(String octal) {
    String[] parts = octal.split("\\."); // Split the octal number into whole and fractional parts

    // Convert the whole number part to binary
    int wholeNumber = Integer.parseInt(parts[0], 8); // Convert whole number from octal to decimal
    String wholeNumberBinary = Integer.toBinaryString(wholeNumber); // Convert whole number from decimal to binary

    // Convert the fractional part to binary
    StringBuilder fractionalPartBinary = new StringBuilder();
    if (parts.length > 1) {
        String fractionPartOctal = parts[1];
        for (int i = 0; i < fractionPartOctal.length(); i++) {
            int decimal = Character.getNumericValue(fractionPartOctal.charAt(i)); // Convert octal digit to decimal
            String threeBits = Integer.toBinaryString(decimal); // Convert decimal to binary
            while (threeBits.length() < 3) { // Pad with zeros to make length 3
                threeBits = "0" + threeBits;
            }
            fractionalPartBinary.append(threeBits);
        }
    }

    return wholeNumberBinary + (fractionalPartBinary.length() > 0 ? "." + fractionalPartBinary : "");
}
